Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 
ii. Business table = 10000 
iii. Category table = 10000 
iv. Checkin table = 10000 
v. elite_years table = 10000 
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id 10000
ii. Hours = business_id 1562
iii. Category =business_id 2643
iv. Attribute = business_id 1115
v. Review = id 10000, business_id 8090, user_id 9581
vi. Checkin = business_id 493
vii. Photo =id 10000, business_id 6493
viii. Tip = user_id 537, business_id 3979
ix. User = id 10000
x. Friend = user_id 11
xi. Elite_years = user_id 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:No
	
	
	SQL code used to arrive at answer:
	
select 
  id, 
  name, 
  review_count, 
  yelping_since, 
  useful, 
  funny, 
  cool, 
  fans, 
  average_stars, 
  compliment_hot, 
  compliment_more, 
  compliment_profile, 
  compliment_cute, 
  compliment_list, 
  compliment_note, 
  compliment_plain, 
  compliment_cool, 
  compliment_funny, 
  compliment_writer, 
  compliment_photos 
from 
  user 
where 
  id is null 
  or name is null 
  or review_count is null 
  or yelping_since is null 
  or useful is null 
  or funny is null 
  or cool is null 
  or fans is null 
  or average_stars is null 
  or compliment_hot is null 
  or compliment_more is null 
  or compliment_profile is null 
  or compliment_cute is null 
  or compliment_list is null 
  or compliment_note is null 
  or compliment_plain is null 
  or compliment_cool is null 
  or compliment_funny is null 
  or compliment_writer is null 
  or compliment_photos is null


	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	select city, sum(review_count) as reviews
	from business
	group by city
	order by reviews desc
	
	Copy and Paste the Result Below:
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars as star_rating, count(stars) as count
from business
where city = 'Avon'
group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| star_rating | count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+

ii. Beachwood

SQL code used to arrive at answer:
select stars as star_rating, count(stars) as count
from business
where city = 'Beachwood'
group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| star_rating | count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
select id,name, sum(review_count) sum_reviews
from user
group by id,name
order by sum_reviews desc
limit 3
		
	Copy and Paste the Result Below:
+------------------------+--------+-------------+
| id                     | name   | sum_reviews |
+------------------------+--------+-------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |        2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |        1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |        1339 |
+------------------------+--------+-------------+	


8. Does posing more reviews correlate with more fans?
i don't think so
Please explain your findings and interpretation of the results:
select review_count, fans
from user   
+--------------+------+
| review_count | fans |
+--------------+------+
|          245 |   15 |
|            2 |    0 |
|           57 |    0 |
|            8 |    0 |
|            2 |    0 |
|           43 |    1 |
|           26 |    2 |
|            2 |    0 |
|            1 |    0 |
|            7 |    0 |
|            3 |    0 |
|            9 |    0 |
|            5 |    0 |
|            2 |    0 |
|           23 |    0 |
|           28 |    0 |
|         1153 |  311 |
|            4 |    0 |
|          111 |    2 |
|            2 |    0 |
|          213 |   10 |
|          239 |   23 |
|            2 |    0 |
|          400 |   23 |
|           25 |    0 |
+--------------+------+

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: the word "love" has more reviews

	
	SQL code used to arrive at answer:

SELECT 'love' Word, COUNT(text) [Total Count]
FROM review
WHERE text LIKE '%love%'
group by Word
UNION
SELECT 'hate' Word, COUNT(text) [Total Count]
FROM review
WHERE text LIKE '%hate%'
group by Word

+------+-------------+
| Word | Total Count |
+------+-------------+
| hate |         232 |
| love |        1780 |
+------+-------------+
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
select id,name, sum(fans) [sum_of_fans]
from user
group by id,name
order by [sum_of_fans] desc
limit 10
	
	Copy and Paste the Result Below:
+------------------------+-----------+-------------+
| id                     | name      | sum_of_fans |
+------------------------+-----------+-------------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |         503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |         497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |         173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |         159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |         133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |         124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |         120 |
+------------------------+-----------+-------------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
I choose Las Vegas and Shopping category
i. Do the two groups you chose to analyze have a different distribution of hours?
6 and 7 
select  case when stars >= 4 then "4-5 stars"
             when stars >= 2 and stars <= 3 then "2-3 stars"
             else "other"
             end  as star_rank,
             b.city,
             c.category,
            count(distinct b.id) as company_count,
            count(h.hours)/count(distinct b.id) avg_days
from business b
join hours h on b.id = h.business_id
join category c on b.id = c.business_id
where city = "Las Vegas" and c.category = "Shopping"
group by star_rank, b.city, c.category

+-----------+-----------+----------+---------------+----------+
| star_rank | city      | category | company_count | avg_days |
+-----------+-----------+----------+---------------+----------+
| 2-3 stars | Las Vegas | Shopping |             1 |        7 |
| 4-5 stars | Las Vegas | Shopping |             2 |        6 |
| other     | Las Vegas | Shopping |             1 |        6 |
+-----------+-----------+----------+---------------+----------+

ii. Do the two groups you chose to analyze have a different number of reviews?
yes 
36 reviews for 4-5 stars while 6 for 2-3 Stars
select  case when stars >= 4 then "4-5 stars"
             when stars >= 2 and stars <= 3 then "2-3 stars"
             else "other"
             end  as star_rank,
             b.city,
             c.category,
             b.review_count,
            count(distinct b.id) as company_count,
            count(h.hours)/count(distinct b.id) avg_days
from business b
join hours h on b.id = h.business_id
join category c on b.id = c.business_id
where city = "Las Vegas" and c.category = "Shopping"
group by star_rank, b.city, c.category,b.review_count
+-----------+-----------+----------+--------------+---------------+----------+
| star_rank | city      | category | review_count | company_count | avg_days |
+-----------+-----------+----------+--------------+---------------+----------+
| 2-3 stars | Las Vegas | Shopping |            6 |             1 |        7 |
| 4-5 stars | Las Vegas | Shopping |            4 |             1 |        5 |
| 4-5 stars | Las Vegas | Shopping |           32 |             1 |        7 |
| other     | Las Vegas | Shopping |           11 |             1 |        6 |
+-----------+-----------+----------+--------------+---------------+----------+
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
business with 2-3 stars and other stars except for 4-5 stars are in the same area while businesses with 4-5 are in different areas

select  case when b.stars >= 4 then "4-5 stars"
             when b.stars >= 2 and b.stars <= 3 then "2-3 stars"
             else "other"
             end  as star_rank,
             b.address,
             b.neighborhood,
             b.city,
             b.postal_code
from business b
join hours h on b.id = h.business_id
join category c on b.id = c.business_id
where b.city = "Las Vegas" and c.category = "Shopping"
group by star_rank, b.city, c.category,b.review_count

+-----------+-----------------------------+--------------+-----------+-------------+
| star_rank | address                     | neighborhood | city      | postal_code |
+-----------+-----------------------------+--------------+-----------+-------------+
| 2-3 stars | 3808 E Tropicana Ave        | Eastside     | Las Vegas | 89121       |
| 4-5 stars | 3555 W Reno Ave, Ste F      |              | Las Vegas | 89118       |
| 4-5 stars | 1000 Scenic Loop Dr         |              | Las Vegas | 89161       |
| other     | 3421 E Tropicana Ave, Ste I | Southeast    | Las Vegas | 89121       |
+-----------+-----------------------------+--------------+-----------+-------------+


SQL code used for analysis:

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: open businesses are much more than the closed ones
         
         
ii. Difference 2: average review for the open ones is higher than the closed ones
         
         
         
SQL code used for analysis:
select is_open, avg(stars), avg(review_count),sum(stars),sum(review_count),count(*) as count
from business
group by is_open

+---------+---------------+-------------------+------------+-------------------+-------+
| is_open |    avg(stars) | avg(review_count) | sum(stars) | sum(review_count) | count |
+---------+---------------+-------------------+------------+-------------------+-------+
|       0 | 3.52039473684 |     23.1980263158 |     5351.0 |             35261 |  1520 |
|       1 | 3.67900943396 |     31.7570754717 |    31198.0 |            269300 |  8480 |
+---------+---------------+-------------------+------------+-------------------+-------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         clustring business categories to see which has the most number of businesses, avg stars and total reviews 
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
		business name or id to count number of unique businesses in each category,average star rating for yeach business category, sum of reviews for each business category 
		then sort by the number of businesses, avg stars and sum of reviews in descending order to see the most popular business categories  
                  
iii. Output of your finished dataset:
+---------------------------+---------------------+---------------+----------------+
| category                  | count_of_businesses |     avg_stars | sum_of_reviews |
+---------------------------+---------------------+---------------+----------------+
| Restaurants               |                  71 | 3.45774647887 |           4504 |
| Shopping                  |                  30 | 3.98333333333 |            977 |
| Food                      |                  23 | 3.78260869565 |           1781 |
| Nightlife                 |                  20 |         3.475 |           1351 |
| Health & Medical          |                  17 | 4.08823529412 |            203 |
| Bars                      |                  17 |           3.5 |           1322 |
| Home Services             |                  16 |           4.0 |             94 |
| Beauty & Spas             |                  13 | 3.88461538462 |            119 |
| Local Services            |                  12 | 4.20833333333 |            100 |
| American (Traditional)    |                  11 | 3.81818181818 |           1128 |
| Active Life               |                  10 |          4.15 |            131 |
| Automotive                |                   9 |           4.5 |            198 |
| Hotels & Travel           |                   9 | 3.22222222222 |            381 |
| Sandwiches                |                   8 |        3.9375 |            974 |
| Burgers                   |                   8 |         3.125 |            297 |
| Arts & Entertainment      |                   7 |           4.0 |            388 |
| Mexican                   |                   7 |           3.5 |            327 |
| Fast Food                 |                   7 | 3.21428571429 |            185 |
| Hair Salons               |                   6 | 4.08333333333 |             65 |
| Event Planning & Services |                   6 |          3.75 |            118 |
| American (New)            |                   6 | 3.33333333333 |            481 |
| Doctors                   |                   5 |           4.2 |             55 |
| Bakeries                  |                   5 |           4.1 |            239 |
| Specialty Food            |                   5 |           4.0 |            896 |
| Japanese                  |                   5 |           3.8 |            152 |
+---------------------------+---------------------+---------------+----------------+
         
iv. Provide the SQL code you used to create your final dataset:
select c.category,
count(distinct b.name) as count_of_businesses,
avg(b.stars) avg_stars,
sum(b.review_count) sum_of_reviews
from business b
join category c on b.id = c.business_id
group by c.category
order by count_of_businesses desc, avg_stars desc, sum_of_reviews desc